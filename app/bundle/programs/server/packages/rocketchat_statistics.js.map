{"version":3,"sources":["meteor://ðŸ’»app/packages/rocketchat:statistics/lib/rocketchat.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/models/Statistics.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/get.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/functions/save.js","meteor://ðŸ’»app/packages/rocketchat:statistics/server/methods/getStatistics.js"],"names":["RocketChat","statistics","models","Statistics","_Base","constructor","tryEnsureIndex","createdAt","findOneById","_id","options","query","findOne","findLast","sort","limit","records","find","fetch","_","module","watch","require","default","v","os","LivechatVisitors","wizardFields","get","_getStatistics","wizard","forEach","field","record","Settings","wizardField","replace","toLowerCase","value","allowMarketingEmails","firstUser","Users","getOldest","name","emails","contactName","contactEmail","address","uniqueId","settings","installedAt","Info","version","tag","branch","totalUsers","Meteor","users","count","activeUsers","active","nonActiveUsers","onlineUsers","statusConnection","awayUsers","offlineUsers","totalRooms","Rooms","totalChannels","findByType","totalPrivateGroups","totalDirect","totalLivechat","totalLivechatVisitors","totalMessages","Messages","totalChannelMessages","reduce","fields","msgs","_countChannelMessages","num","room","totalPrivateGroupMessages","_countPrivateGroupMessages","totalDirectMessages","_countDirectMessages","totalLivechatMessages","_countLivechatMessages","lastLogin","getLastLogin","lastMessageSentAt","getLastTimestamp","lastSeenSubscription","Subscriptions","getLastSeen","type","platform","arch","release","uptime","loadavg","totalmem","freemem","cpus","process","nodeVersion","pid","deploy","method","env","DEPLOY_METHOD","DEPLOY_PLATFORM","migration","Migrations","_getControl","instanceCount","InstanceStatus","getCollection","_updatedAt","$gt","Date","now","MongoInternals","defaultRemoteCollectionDriver","mongo","_oplogHandle","onOplogEntry","oplogEnabled","save","insert","methods","getStatistics","refresh","userId","Error","authz","hasPermission"],"mappings":"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","file":"/packages/rocketchat_statistics.js","sourcesContent":["RocketChat.statistics = {};\n","RocketChat.models.Statistics = new class extends RocketChat.models._Base {\n\tconstructor() {\n\t\tsuper('statistics');\n\n\t\tthis.tryEnsureIndex({ createdAt: 1 });\n\t}\n\n\t// FIND ONE\n\tfindOneById(_id, options) {\n\t\tconst query = { _id };\n\t\treturn this.findOne(query, options);\n\t}\n\n\tfindLast() {\n\t\tconst options = {\n\t\t\tsort: {\n\t\t\t\tcreatedAt: -1,\n\t\t\t},\n\t\t\tlimit: 1,\n\t\t};\n\t\tconst records = this.find({}, options).fetch();\n\t\treturn records && records[0];\n\t}\n};\n","/* global InstanceStatus, MongoInternals */\nimport _ from 'underscore';\nimport os from 'os';\nimport LivechatVisitors from 'meteor/rocketchat:livechat/server/models/LivechatVisitors';\n\nconst wizardFields = [\n\t'Organization_Type',\n\t'Organization_Name',\n\t'Industry',\n\t'Size',\n\t'Country',\n\t'Website',\n\t'Site_Name',\n\t'Language',\n\t'Server_Type',\n\t'Allow_Marketing_Emails',\n];\n\nRocketChat.statistics.get = function _getStatistics() {\n\tconst statistics = {};\n\n\t// Setup Wizard\n\tstatistics.wizard = {};\n\twizardFields.forEach((field) => {\n\t\tconst record = RocketChat.models.Settings.findOne(field);\n\t\tif (record) {\n\t\t\tconst wizardField = field.replace(/_/g, '').replace(field[0], field[0].toLowerCase());\n\t\t\tstatistics.wizard[wizardField] = record.value;\n\t\t}\n\t});\n\n\tif (statistics.wizard.allowMarketingEmails) {\n\t\tconst firstUser = RocketChat.models.Users.getOldest({ name: 1, emails: 1 });\n\t\tstatistics.wizard.contactName = firstUser && firstUser.name;\n\t\tstatistics.wizard.contactEmail = firstUser && firstUser.emails[0].address;\n\t}\n\n\t// Version\n\tstatistics.uniqueId = RocketChat.settings.get('uniqueID');\n\tif (RocketChat.models.Settings.findOne('uniqueID')) {\n\t\tstatistics.installedAt = RocketChat.models.Settings.findOne('uniqueID').createdAt;\n\t}\n\n\tif (RocketChat.Info) {\n\t\tstatistics.version = RocketChat.Info.version;\n\t\tstatistics.tag = RocketChat.Info.tag;\n\t\tstatistics.branch = RocketChat.Info.branch;\n\t}\n\n\t// User statistics\n\tstatistics.totalUsers = Meteor.users.find().count();\n\tstatistics.activeUsers = Meteor.users.find({ active: true }).count();\n\tstatistics.nonActiveUsers = statistics.totalUsers - statistics.activeUsers;\n\tstatistics.onlineUsers = Meteor.users.find({ statusConnection: 'online' }).count();\n\tstatistics.awayUsers = Meteor.users.find({ statusConnection: 'away' }).count();\n\tstatistics.offlineUsers = statistics.totalUsers - statistics.onlineUsers - statistics.awayUsers;\n\n\t// Room statistics\n\tstatistics.totalRooms = RocketChat.models.Rooms.find().count();\n\tstatistics.totalChannels = RocketChat.models.Rooms.findByType('c').count();\n\tstatistics.totalPrivateGroups = RocketChat.models.Rooms.findByType('p').count();\n\tstatistics.totalDirect = RocketChat.models.Rooms.findByType('d').count();\n\tstatistics.totalLivechat = RocketChat.models.Rooms.findByType('l').count();\n\n\t// livechat visitors\n\tstatistics.totalLivechatVisitors = LivechatVisitors.find().count();\n\n\t// Message statistics\n\tstatistics.totalMessages = RocketChat.models.Messages.find().count();\n\tstatistics.totalChannelMessages = _.reduce(RocketChat.models.Rooms.findByType('c', { fields: { msgs: 1 } }).fetch(), function _countChannelMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalPrivateGroupMessages = _.reduce(RocketChat.models.Rooms.findByType('p', { fields: { msgs: 1 } }).fetch(), function _countPrivateGroupMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalDirectMessages = _.reduce(RocketChat.models.Rooms.findByType('d', { fields: { msgs: 1 } }).fetch(), function _countDirectMessages(num, room) { return num + room.msgs; }, 0);\n\tstatistics.totalLivechatMessages = _.reduce(RocketChat.models.Rooms.findByType('l', { fields: { msgs: 1 } }).fetch(), function _countLivechatMessages(num, room) { return num + room.msgs; }, 0);\n\n\tstatistics.lastLogin = RocketChat.models.Users.getLastLogin();\n\tstatistics.lastMessageSentAt = RocketChat.models.Messages.getLastTimestamp();\n\tstatistics.lastSeenSubscription = RocketChat.models.Subscriptions.getLastSeen();\n\n\tstatistics.os = {\n\t\ttype: os.type(),\n\t\tplatform: os.platform(),\n\t\tarch: os.arch(),\n\t\trelease: os.release(),\n\t\tuptime: os.uptime(),\n\t\tloadavg: os.loadavg(),\n\t\ttotalmem: os.totalmem(),\n\t\tfreemem: os.freemem(),\n\t\tcpus: os.cpus(),\n\t};\n\n\tstatistics.process = {\n\t\tnodeVersion: process.version,\n\t\tpid: process.pid,\n\t\tuptime: process.uptime(),\n\t};\n\n\tstatistics.deploy = {\n\t\tmethod: process.env.DEPLOY_METHOD || 'tar',\n\t\tplatform: process.env.DEPLOY_PLATFORM || 'selfinstall',\n\t};\n\n\tstatistics.migration = RocketChat.Migrations._getControl();\n\tstatistics.instanceCount = InstanceStatus.getCollection().find({ _updatedAt: { $gt: new Date(Date.now() - process.uptime() * 1000 - 2000) } }).count();\n\n\tif (MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle && MongoInternals.defaultRemoteCollectionDriver().mongo._oplogHandle.onOplogEntry && RocketChat.settings.get('Force_Disable_OpLog_For_Cache') !== true) {\n\t\tstatistics.oplogEnabled = true;\n\t}\n\n\treturn statistics;\n};\n","RocketChat.statistics.save = function() {\n\tconst statistics = RocketChat.statistics.get();\n\tstatistics.createdAt = new Date;\n\tRocketChat.models.Statistics.insert(statistics);\n\treturn statistics;\n};\n","Meteor.methods({\n\tgetStatistics(refresh) {\n\t\tif (!Meteor.userId()) {\n\t\t\tthrow new Meteor.Error('error-invalid-user', 'Invalid user', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (RocketChat.authz.hasPermission(Meteor.userId(), 'view-statistics') !== true) {\n\t\t\tthrow new Meteor.Error('error-not-allowed', 'Not allowed', { method: 'getStatistics' });\n\t\t}\n\n\t\tif (refresh) {\n\t\t\treturn RocketChat.statistics.save();\n\t\t} else {\n\t\t\treturn RocketChat.models.Statistics.findLast();\n\t\t}\n\t},\n});\n"]}